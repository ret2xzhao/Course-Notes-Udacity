1
00:00:00,000 --> 00:00:04,075
Our goal, using the lane sequence framework,

2
00:00:04,075 --> 00:00:07,650
is to generate trajectories for objects on the road.

3
00:00:07,650 --> 00:00:09,669
This is a complicated problem.

4
00:00:09,669 --> 00:00:12,699
So, let's begin with a slightly easier problem.

5
00:00:12,699 --> 00:00:16,433
We'll predict the transition between lane segments.

6
00:00:16,434 --> 00:00:20,230
Suppose we detect a car in a lane segment zero and we

7
00:00:20,230 --> 00:00:24,155
want to predict how it's going to move over the next few timesteps.

8
00:00:24,155 --> 00:00:26,520
There are two obvious options.

9
00:00:26,519 --> 00:00:29,589
It might stay in lane segment zero and then turn

10
00:00:29,589 --> 00:00:34,405
right or it might shift to lane segment one and then go straight.

11
00:00:34,405 --> 00:00:38,380
This analysis is actually a big step forward for us.

12
00:00:38,380 --> 00:00:42,745
We've simplified the prediction problem into a selection problem.

13
00:00:42,744 --> 00:00:45,219
Now, all we have to do is choose

14
00:00:45,219 --> 00:00:49,375
the lane sequence that the vehicle is most likely to take.

15
00:00:49,375 --> 00:00:54,755
We can make this choice by calculating the probabilities for each lane sequence.

16
00:00:54,755 --> 00:01:00,480
We need a model that takes as input both the vehicle state and the lane segments.

17
00:01:00,479 --> 00:01:03,250
This model should provide a probability that

18
00:01:03,250 --> 00:01:06,239
the vehicle will take each of the lane sequences.

19
00:01:06,239 --> 00:01:10,239
We expect our model to be able to learn new behaviors.

20
00:01:10,239 --> 00:01:14,579
So the model should be trained empirically using observed data.

21
00:01:14,579 --> 00:01:17,289
In training, we'll provide the model with

22
00:01:17,290 --> 00:01:21,885
real examples that include not only the lane segments and object state,

23
00:01:21,885 --> 00:01:25,990
but also which lane sequence the object ultimately chose.

24
00:01:25,989 --> 00:01:29,409
By adding more and more of these records over time,

25
00:01:29,409 --> 00:01:34,060
the model can iteratively update itself and become increasingly accurate.

26
00:01:34,060 --> 00:01:38,049
Each record will also consist of the sequence of lane segments that

27
00:01:38,049 --> 00:01:42,935
the observed object followed and the associated states of the object.

28
00:01:42,935 --> 00:01:45,034
At each point in time,

29
00:01:45,034 --> 00:01:49,584
the object occupies one segment and has a specific state.

30
00:01:49,584 --> 00:01:52,929
The entire record consists of a sequence of

31
00:01:52,930 --> 00:01:58,190
lane segments and the associated states of the object.

