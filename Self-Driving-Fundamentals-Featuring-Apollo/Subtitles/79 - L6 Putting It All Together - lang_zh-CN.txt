1
00:00:00,000 --> 00:00:05,280
我们来回顾一下端到端路径-速度解耦规划

2
00:00:05,280 --> 00:00:07,860
假设我们正在路上行驶

3
00:00:07,860 --> 00:00:12,750
感知系统观察到 一辆缓慢行驶的车辆离我们越来越近

4
00:00:12,750 --> 00:00:17,545
首先 我们在这辆车的周围生成多条候选路线

5
00:00:17,545 --> 00:00:21,390
我们使用成本函数对这些候选路径进行评估

6
00:00:21,390 --> 00:00:24,060
并选择成本最低的路径

7
00:00:24,059 --> 00:00:27,729
然后我们使用 ST 图来进行速度规划

8
00:00:27,730 --> 00:00:33,469
我们根据其他车辆随时间变化的位置阻挡了 ST 图的部分区域

9
00:00:33,469 --> 00:00:36,250
优化引擎可帮助我们

10
00:00:36,250 --> 00:00:41,640
确定该图的最佳速度曲线 该曲线受制于约束和成本函数

11
00:00:41,640 --> 00:00:47,795
我们可以使用二次规划让路径和速度曲线变平滑

12
00:00:47,795 --> 00:00:53,814
最后 我们将路径和速度曲线合并构建轨迹

13
00:00:53,814 --> 00:00:57,719
这里的轨迹在速度较快时为红色

14
00:00:57,719 --> 00:00:59,799
在速度较慢时为蓝色

15
00:00:59,799 --> 00:01:05,659
我们使用该轨迹来安全地绕开其他车辆 并继续我们的旅程

