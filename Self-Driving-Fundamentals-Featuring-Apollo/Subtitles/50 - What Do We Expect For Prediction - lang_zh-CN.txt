1
00:00:00,000 --> 00:00:03,430
预测路径有实时性的要求

2
00:00:03,430 --> 00:00:07,694
实时性是指我们想要算法的延迟越短越好

3
00:00:07,694 --> 00:00:10,890
一辆车如果是 60 千米/每小时的速度

4
00:00:10,890 --> 00:00:14,035
那么它在每 0.25 秒会行驶 5 米

5
00:00:14,035 --> 00:00:17,100
所以我们需要确保我们的无人车在行驶之前

6
00:00:17,100 --> 00:00:20,950
前方 5 米没有任何障碍物并且可以安全地穿行

7
00:00:20,949 --> 00:00:23,515
下一个目标就是准确性

8
00:00:23,515 --> 00:00:25,949
如果我们预测出相邻多车道的汽车

9
00:00:25,949 --> 00:00:29,454
想并入我们的车道

10
00:00:29,454 --> 00:00:30,989
我们需要减速

11
00:00:30,989 --> 00:00:34,739
而另一种情况是

12
00:00:34,740 --> 00:00:38,835
如果预测它会保持在自己的车道上行驶

13
00:00:38,835 --> 00:00:43,189
我们需要我们做出的预测尽可能保持准确

14
00:00:43,189 --> 00:00:47,054
这样才能帮助我们无人车做出很好的决策

15
00:00:47,054 --> 00:00:51,695
预测模块也应该能够学习新的行为

16
00:00:51,695 --> 00:00:56,310
当路上有很多车辆 情况将变得复杂

17
00:00:56,310 --> 00:01:01,719
开发出每种场景的静态模型是不可能完成的任务

18
00:01:01,719 --> 00:01:04,620
这就是为什么我们需要当我们遇到这样的问题时

19
00:01:04,620 --> 00:01:07,780
预测模块能够学习新的行为

20
00:01:07,780 --> 00:01:10,980
用这种方式 我们可以使用多源的数据进行训练

21
00:01:10,980 --> 00:01:15,920
这可以使算法随着时间的推移而提升预测能力

