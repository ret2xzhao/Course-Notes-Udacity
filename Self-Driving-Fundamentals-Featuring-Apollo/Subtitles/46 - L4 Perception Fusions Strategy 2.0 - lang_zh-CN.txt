1
00:00:00,000 --> 00:00:06,245
Apollo 使用激光雷达和雷达来检测障碍物

2
00:00:06,245 --> 00:00:10,905
用于融合输出的主要算法为卡尔曼滤波

3
00:00:10,904 --> 00:00:13,489
卡尔曼滤波有两个步骤

4
00:00:13,490 --> 00:00:16,079
第一步为预测状态

5
00:00:16,079 --> 00:00:19,214
第二步是更新测量结果

6
00:00:19,214 --> 00:00:21,664
设想我们正在跟踪一名行人

7
00:00:21,664 --> 00:00:26,339
这里的状态表示行人的位置和速度

8
00:00:26,339 --> 00:00:29,954
从已经掌握的行人状态开始

9
00:00:29,954 --> 00:00:34,170
我们使用这些信息来执行卡尔曼滤波的第一步

10
00:00:34,170 --> 00:00:37,874
即预测行人在将来的状态

11
00:00:37,874 --> 00:00:41,215
下一步为误差结果更新

12
00:00:41,215 --> 00:00:46,995
我们使用新的传感器来更新我们所认为的行人状态

13
00:00:46,994 --> 00:00:53,009
卡尔曼滤波算法是预测和更新步骤的无限循环

14
00:00:53,009 --> 00:00:55,589
实际上有两种测量结果更新步骤

15
00:00:55,590 --> 00:01:00,200
同步和异步

16
00:01:00,200 --> 00:01:06,150
同步融合同时更新来自不同传感器的测量结果

17
00:01:06,150 --> 00:01:12,570
而异步融合则逐个更新所收到的传感器测量结果

18
00:01:12,569 --> 00:01:18,899
传感器融合可提高感知性能 因为各传感器相辅相成

19
00:01:18,900 --> 00:01:21,880
融合也可以减少跟踪误差

20
00:01:21,879 --> 00:01:24,560
所以我们可以更加确信

21
00:01:24,560 --> 00:01:28,629
对道路上其他物体位置的预测

