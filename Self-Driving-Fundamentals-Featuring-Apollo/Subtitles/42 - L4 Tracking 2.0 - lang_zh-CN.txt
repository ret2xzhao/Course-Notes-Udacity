1
00:00:00,450 --> 00:00:05,060
在检测完对象后 我们需要追踪它们

2
00:00:05,059 --> 00:00:07,004
追踪的意义是什么？

3
00:00:07,004 --> 00:00:13,335
如果我们对每个帧中的每个对象进行检测并用边界框对每个对象进行标识

4
00:00:13,335 --> 00:00:17,990
那么跨帧追踪对象会带来哪些好处？

5
00:00:17,989 --> 00:00:22,824
首先 追踪在检测失败时是至关重要的

6
00:00:22,824 --> 00:00:25,214
如果你在运行检测算法时

7
00:00:25,214 --> 00:00:28,859
对象被其他对象遮挡一部分

8
00:00:28,859 --> 00:00:31,824
则检测算法可能会失败

9
00:00:31,824 --> 00:00:34,769
追踪可以解决遮挡问题

10
00:00:34,770 --> 00:00:39,295
另一个原因在于追踪可以保留身份

11
00:00:39,295 --> 00:00:44,405
障碍物检测的输出为包含对象的边界框

12
00:00:44,405 --> 00:00:48,954
但是 对象没有与任何身份关联

13
00:00:48,954 --> 00:00:51,004
单独使用对象检测时

14
00:00:51,005 --> 00:00:53,405
计算机不知道一个帧中的哪些对象

15
00:00:53,405 --> 00:00:57,594
与下一帧中的哪些对象相对应

16
00:00:57,594 --> 00:01:02,439
该任务对人类来说很简单 但对汽车来说很困难

17
00:01:02,439 --> 00:01:06,170
追踪的第一步为确认身份

18
00:01:06,170 --> 00:01:11,120
通过查找特征相似度最高的对象

19
00:01:11,120 --> 00:01:16,734
我们将在之前的帧中检测到的所有对象与在当前的帧中检测到的对象进行匹配

20
00:01:16,734 --> 00:01:19,569
对象具有各种特征

21
00:01:19,569 --> 00:01:22,774
有些特征可能基于颜色 而另一些特征可能基于形状

22
00:01:22,775 --> 00:01:27,155
计算机视觉算法可以计算出复杂的图像特征

23
00:01:27,155 --> 00:01:32,090
如局部二值模式和方向梯度直方图

24
00:01:32,090 --> 00:01:35,750
当然 我们也需要考虑连续视频帧中

25
00:01:35,750 --> 00:01:40,650
两个障碍物之间的位置和速度

26
00:01:40,650 --> 00:01:46,609
由于两个帧之间的对象位置和速度没有太大变化

27
00:01:46,609 --> 00:01:50,609
该信息也可以帮助我们快速找到匹配的对象

28
00:01:50,609 --> 00:01:56,435
在确定身份后 我们可以使用对象的位置

29
00:01:56,435 --> 00:01:58,850
并结合预测算法 

30
00:01:58,849 --> 00:02:02,724
以估计在下一个时间步的速度和位置

31
00:02:02,724 --> 00:02:08,120
该预测可帮助我们识别下一帧中的相应对象

