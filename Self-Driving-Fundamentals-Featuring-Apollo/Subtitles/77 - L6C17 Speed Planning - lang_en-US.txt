1
00:00:00,270 --> 00:00:03,964
In order to build the best speed profile,

2
00:00:03,964 --> 00:00:07,839
we can discretize the ST graph into multiple cells.

3
00:00:07,839 --> 00:00:10,460
Speed changes between cells,

4
00:00:10,460 --> 00:00:13,445
but within each cell, speed remains constant.

5
00:00:13,445 --> 00:00:15,820
This approach simplifies the construction of

6
00:00:15,820 --> 00:00:20,039
a speed profile while maintaining an approximation of a curve.

7
00:00:20,039 --> 00:00:21,750
On an ST graph,

8
00:00:21,750 --> 00:00:24,640
obstacles can be drawn as rectangles that block off

9
00:00:24,640 --> 00:00:27,714
certain parts of the road during certain time periods.

10
00:00:27,714 --> 00:00:31,660
For example, suppose the prediction module projects that a car

11
00:00:31,660 --> 00:00:35,704
will cut into our lane from time T0 to T1.

12
00:00:35,704 --> 00:00:40,929
Since that car will occupy positions S0 to S1 during that time period,

13
00:00:40,929 --> 00:00:44,979
we draw a rectangle on our ST graph blocking out positions

14
00:00:44,979 --> 00:00:49,929
S0 to S1 during time period T0 to T1.

15
00:00:49,929 --> 00:00:52,990
In order to avoid a collision,

16
00:00:52,990 --> 00:00:57,039
our speed profile must not intersect this rectangle.

17
00:00:57,039 --> 00:01:01,600
Now that we have an ST graph with various cells blocked off,

18
00:01:01,600 --> 00:01:06,575
we can use an optimization engine to select the best speed profile for the graph.

19
00:01:06,575 --> 00:01:10,600
The optimization engine uses complex mathematics to search

20
00:01:10,599 --> 00:01:14,439
for a low cost solution subject to various constraints.

21
00:01:14,439 --> 00:01:18,609
These constraints might include legal constraints such as speed limits,

22
00:01:18,609 --> 00:01:22,150
distance constraints such as distances from obstacles,

23
00:01:22,150 --> 00:01:26,510
or physical constraints on the car such as acceleration limits.

